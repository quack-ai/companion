name: quack
version: '3.8'

services:
  test_db:
    image: postgres:15-alpine
    expose:
      - 5432
    environment:
      - POSTGRES_USER=dummy_login
      - POSTGRES_PASSWORD=dummy_pwd
      - POSTGRES_DB=dummy_db
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U dummy_login -d dummy_db'"]
      interval: 10s
      timeout: 3s
      retries: 3

  ollama:
    image: ollama/ollama:0.1.32
    expose:
      - 11434
    volumes:
      - "$HOME/.ollama:/root/.ollama"
    command: serve
    healthcheck:
      test: ["CMD-SHELL", "ollama --help"]
      interval: 10s
      timeout: 5s
      retries: 3

  backend:
    image: quackai/companion:latest
    build:
      context: .
      dockerfile: ./src/Dockerfile
    depends_on:
      test_db:
        condition: service_healthy
      ollama:
        condition: service_healthy
    ports:
      - "5050:5050"
    environment:
      - SUPERADMIN_GH_PAT=${SUPERADMIN_GH_PAT}
      - GH_OAUTH_ID=${GH_OAUTH_ID}
      - GH_OAUTH_SECRET=${GH_OAUTH_SECRET}
      - POSTGRES_URL=postgresql+asyncpg://dummy_login:dummy_pwd@test_db/dummy_db
      - SUPERADMIN_LOGIN=superadmin_login
      - SUPERADMIN_PWD=superadmin_pwd
      - OLLAMA_ENDPOINT=http://ollama:11434
      - OLLAMA_MODEL=${OLLAMA_MODEL}
      - OLLAMA_TIMEOUT=${OLLAMA_TIMEOUT:-60}
      - DEBUG=true
    volumes:
      - ./src/:/app/
    command: >
      sh -c "python app/db.py
      && curl -X POST http://ollama:11434/api/pull -d '{\"name\": \"${OLLAMA_MODEL}\"}'
      && uvicorn app.main:app --reload --host 0.0.0.0 --port 5050 --proxy-headers"
    healthcheck:
      test: ["CMD-SHELL", "curl http://localhost:5050/status"]
      interval: 10s
      timeout: 3s
      retries: 5
