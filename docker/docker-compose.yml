version: '3.7'

services:
  backend:
    build:
      context: ..
      dockerfile: ./docker/Dockerfile
    command: uvicorn app.main:app --reload --host 0.0.0.0 --port 8050 --proxy-headers
    volumes:
      - ../src/:/app/
    ports:
      - "8050:8050"
    environment:
      - POSTGRES_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/${POSTGRES_DB}
      - OLLAMA_ENDPOINT=http://ollama:11434
      - OLLAMA_MODEL=${OLLAMA_MODEL}
      - SECRET_KEY=${SECRET_KEY}
      - SUPERADMIN_GH_PAT=${SUPERADMIN_GH_PAT}
      - SUPERADMIN_LOGIN=${SUPERADMIN_LOGIN}
      - SUPERADMIN_PWD=${SUPERADMIN_PWD}
      - GH_OAUTH_ID=${GH_OAUTH_ID}
      - GH_OAUTH_SECRET=${GH_OAUTH_SECRET}
      - SUPPORT_EMAIL=${SUPPORT_EMAIL}
      - DEBUG=true
    depends_on:
      db:
        condition: service_healthy
      ollama:
        condition: service_healthy

  ollama:
    image: ollama/ollama:0.1.29
    command: serve
    volumes:
      - "$HOME/.ollama:/root/.ollama"
    expose:
      - 11434
    healthcheck:
      test: ["CMD-SHELL", "ollama pull '${OLLAMA_MODEL}'"]
      interval: 5s
      timeout: 1m
      retries: 3
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]

  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    expose:
      - 5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 10s
      timeout: 3s
      retries: 3

volumes:
  postgres_data:
  ollama:
