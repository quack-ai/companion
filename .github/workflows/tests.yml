name: tests

on:
  push:
    branches: main
  pull_request:
    branches: main

jobs:
  pytest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - uses: abatilo/actions-poetry@v2
        with:
          poetry-version: "1.6.1"
      - name: Resolve dependencies
        run: poetry export -f requirements.txt --without-hashes --with test --output requirements.txt
      - name: Build & run docker
        env:
          SUPERADMIN_GH_PAT: ${{ secrets.SUPERADMIN_GH_PAT }}
          GH_OAUTH_ID: ${{ secrets.GH_OAUTH_ID }}
          GH_OAUTH_SECRET: ${{ secrets.GH_OAUTH_SECRET }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: docker compose -f docker-compose.test.yml up -d --build
      - name: Run docker test
        env:
          SUPERADMIN_GH_PAT: ${{ secrets.SUPERADMIN_GH_PAT }}
          GH_OAUTH_ID: ${{ secrets.GH_OAUTH_ID }}
          GH_OAUTH_SECRET: ${{ secrets.GH_OAUTH_SECRET }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          docker compose -f docker-compose.test.yml exec -T backend pytest --cov=app --cov-report xml tests/
          docker compose -f docker-compose.test.yml cp backend:/app/coverage.xml ./coverage-src.xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage-src.xml
          flags: unittests
          fail_ci_if_error: true

  headers:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
      - name: Check the headers
        uses: frgfm/validate-python-headers@main
        with:
          license: 'Apache-2.0'
          owner: 'Quack AI'
          starting-year: 2023
          ignore-files: 'version.py,__init__.py'
          ignore-folders: 'src/tests,src/alembic/versions'
