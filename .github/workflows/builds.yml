name: builds

on:
  push:
    branches: main
  pull_request:
    branches: main

jobs:
  docker:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.9"
      - uses: abatilo/actions-poetry@v3
        with:
          poetry-version: "1.7.1"
      - name: Resolve dependencies
        run: poetry export -f requirements.txt --without-hashes --output requirements.txt
      - name: Build & run docker
        env:
          SUPERADMIN_GH_PAT: ${{ secrets.SUPERADMIN_GH_PAT }}
          SUPERADMIN_LOGIN: dummy_login
          SUPERADMIN_PWD: dummy_pwd
          GH_OAUTH_ID: ${{ secrets.GH_OAUTH_ID }}
          GH_OAUTH_SECRET: ${{ secrets.GH_OAUTH_SECRET }}
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: pg_pwd
          OLLAMA_MODEL: tinydolphin:1.1b-v2.8-q4_0
        run: docker compose up -d --build
      - name: Docker sanity check
        env:
          SUPERADMIN_GH_PAT: ${{ secrets.SUPERADMIN_GH_PAT }}
          SUPERADMIN_LOGIN: dummy_login
          SUPERADMIN_PWD: dummy_pwd
          GH_OAUTH_ID: ${{ secrets.GH_OAUTH_ID }}
          GH_OAUTH_SECRET: ${{ secrets.GH_OAUTH_SECRET }}
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: pg_pwd
          OLLAMA_MODEL: tinydolphin:1.1b-v2.8-q4_0
        run: |
          sleep 20 && docker compose logs backend
          nc -vz localhost 8050
          docker compose logs
          curl http://localhost:8050/docs
