version: '3.7'

services:
  backend:
    image: quackai/contribution-api:latest
    build:
      context: .
      dockerfile: ./src/Dockerfile
    depends_on:
      db:
        condition: service_healthy
      ollama:
        condition: service_healthy
    ports:
      - "5050:5050"
    environment:
      - SUPERADMIN_GH_PAT=${SUPERADMIN_GH_PAT}
      - GH_OAUTH_ID=${GH_OAUTH_ID}
      - GH_OAUTH_SECRET=${GH_OAUTH_SECRET}
      - POSTGRES_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/${POSTGRES_DB}
      - SUPERADMIN_LOGIN=${SUPERADMIN_LOGIN}
      - SUPERADMIN_PWD=${SUPERADMIN_PWD}
      - SECRET_KEY=${SECRET_KEY}
      - OLLAMA_ENDPOINT=http://ollama:11434
      - OLLAMA_MODEL=${OLLAMA_MODEL}
      - SUPPORT_EMAIL=${SUPPORT_EMAIL}
      - DEBUG=true
      - PROMETHEUS_ENABLED=true
    volumes:
      - ./src/:/app/
    command: uvicorn app.main:app --reload --host 0.0.0.0 --port 5050 --proxy-headers
    healthcheck:
      test: ["CMD-SHELL", "nc -vz localhost 5050"]
      interval: 10s
      timeout: 3s
      retries: 3

  ollama:
    image: ollama/ollama:0.1.29
    expose:
      - 11434
    volumes:
      - "$HOME/.ollama:/root/.ollama"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    command: serve
    healthcheck:
      test: ["CMD-SHELL", "ollama pull '${OLLAMA_MODEL}'"]
      interval: 5s
      timeout: 1m
      retries: 3

  db:
    image: postgres:15-alpine
    expose:
      - 5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 10s
      timeout: 3s
      retries: 3

  prometheus:
    image: prom/prometheus:latest
    depends_on:
      backend:
        condition: service_healthy
    expose:
      - 9090
    volumes:
      - ./apm/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"

  grafana:
    image: grafana/grafana:latest
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_ADMIN_PWD}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - ./apm/grafana:/etc/grafana/provisioning

  gradio:
    image: quackai/gradio:latest
    build:
      context: .
      dockerfile: ./demo/Dockerfile
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - 7860:7860
    environment:
      - API_URL=http://backend:5050/api/v1
      - SUPERADMIN_LOGIN=${SUPERADMIN_LOGIN}
      - SUPERADMIN_PWD=${SUPERADMIN_PWD}
    volumes:
      - ./demo/:/app/
    command: python main.py --server-name 0.0.0.0

volumes:
  postgres_data:
  ollama:
