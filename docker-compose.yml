version: '3.7'

services:
  backend:
    build: .
    command: uvicorn app.main:app --reload --host 0.0.0.0 --port 8050 --proxy-headers
    volumes:
      - ./src/:/app/
    ports:
      - "8050:8050"
    environment:
      - POSTGRES_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/${POSTGRES_DB}
      - SUPERUSER_LOGIN=${SUPERUSER_LOGIN}
      - SUPERUSER_ID=${SUPERUSER_ID}
      - SUPERUSER_PWD=${SUPERUSER_PWD}
      - GH_OAUTH_ID=${GH_OAUTH_ID}
      - GH_OAUTH_SECRET=${GH_OAUTH_SECRET}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - SERVER_NAME=${SERVER_NAME}
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=true
    depends_on:
      db:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.localhost`) && PathPrefix(`/`)"
      - "traefik.http.routers.api.service=backend@docker"
      - "traefik.http.routers.api.tls={}"
      - "traefik.http.services.backend.loadbalancer.server.port=8050"

  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    expose:
      - 5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 10s
      timeout: 3s
      retries: 3

  traefik:
    image: traefik:v2.9.6
    volumes:
      - "./traefik:/etc/traefik"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    ports:
      # http(s) traffic
      - "80:80"
      - "443:443"
      # traefik dashboard
      - "8080:8080"

volumes:
  postgres_data:
